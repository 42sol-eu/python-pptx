
STATUS (as of Jan 19 2013)
==========================

Development has reached a point where the library is beginning to become
useful for some practical applications and its time to work toward getting an
alpha deployment out there.

The following items have been added over the past couple weeks:

* Presentation.add_slide()
* the ability to change the text of text placeholders and a basic, low-level
  text manipulation interface
* a basic implementation of add_picture()
* acceptance tests based on *behave*

Next is:

* add_textbox()
* deployment of alpha to PyPI
* deployment of end-user documentation to RTD.com


STATUS (as of Jan 3 2013)
=========================

Starting to get interesting now. The ``pptx.packaging`` module is quite stable
and I've been focusing attention on the ``pptx.presentation`` module for the
last week or so. The ``packaging`` module takes care of getting things into
and out of the .pptx package. The ``presentation`` module is what you interact
with directly when using the library, Presentation.open(), prs.add_slide(),
that sort of thing.

A .pptx file will round-trip from a package into memory and back and open up
in PowerPoint fine. The object model on the in-memory side has the objects
Presentation, SlideMaster, SlideLayout, and Slide at the part level, and
Shape, Placeholder (title at least), TextFrame, Paragraph, and Run at the
element level. So the library now actually works to modify an existing
presentation, at least to change the text in placeholder shapes.

Right now I'm working on SlideCollection.add_slide(), which will allow adding
new slides, that will be a big milestone. After that I'll be working on
Shapes.add_x() for x = things like image, textbox, smart-shape probably, table
before too long I'm sure.

Anyway, was time for another push. Seems like I get to those more like once
every two weeks, so that's a reasonable expectation of the tempo going forward
for now.

Unit test coverage is up around 96% and I'm using Test-driven development, so
I expect coverage to stay close to 100%. The suite is up to 146 tests.

There's also a start on documentation, although no user documentation so far,
will have to wait for the top-level API to get a little further along before I
attend to that.


STATUS (as of Dec 14 2012)
==========================

Under active development, but still starting out. Code doesn't do anything
very interesting yet except pass the unit tests.

Latest push is broad refactoring of packaging module and addition of unit
tests. Interim documentation is also substantially updated. At present it
loads a .pptx file into memory in good order. Next step is to get it to save
it back uncorrupted.

Continue to expect new pushes once a week or so for the next several weeks.
Hoping to get baseline .pptx writing capability accomplished by the end of the
calendar year. That would be:

* creating new presentations from default or arbitrary template (.potx)
* adding new slides
* adding placeholder text (title, bullets, etc.)
* adding shapes and images to slides

One or two folks wanted to see what I had so far, so here it is. Expect to see
some actual useful functionality in the next month or so, I've got some time
off coming up over the holidays I'll be using to add some useful end-user
features.


